import React, { useEffect, useState } from "react";
import axios from "axios";
import DesignCard from "./DesignCard"; // Your custom design card
import Loader from "/Loader/Loader.jsx";

const Designs = () => {
  const [designs, setDesigns] = useState([]);
  const [loading, setLoading] = useState(true);
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [flip, setFlip] = useState(false);

  useEffect(() => {
    const fetchDesigns = async () => {
      try {
        setLoading(true);
        const response = await axios.get("https://pixora-s-backend.onrender.com/designs", {
          params: { page, limit: 9 },
        });
        setDesigns(response.data.designs);
        setTotalPages(Math.ceil(response.data.totalCount / 9));
      } catch (error) {
        console.error("❌ Error fetching designs:", error);
      } finally {
        setLoading(false);
      }
    };
    fetchDesigns();
  }, [page]);

  const handlePageChange = (newPage) => {
    if (newPage === page) return;
    setFlip(true);
    setPage(newPage);
  };

  return (
    <div className="p-6 max-w-screen-xl mx-auto">
      <Loader loading={loading} message="Fetching Designs..." />

      {/* Hero Title */}
      <div className="text-center mb-10">
        <h1 className="text-4xl md:text-5xl font-extrabold bg-gradient-to-r from-green-400 to-cyan-500 bg-clip-text text-transparent tracking-wide">
         Community Designs
        </h1>
        <p className="mt-2 text-lg text-white/60">
          Explore and remix designs generated by creators like you ✨
        </p>
      </div>

      {/* Grid Layout */}
      {!loading && designs.length === 0 ? (
        <p className="text-center text-gray-400">No designs found.</p>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6">
          {designs.map((design) => (
            <DesignCard key={design._id} design={design} />
          ))}
        </div>
      )}

      {/* Pagination */}
      <div className="flex justify-center items-center mt-10 space-x-6">
        <button
          onClick={() => handlePageChange(page > 1 ? page - 1 : page)}
          disabled={page === 1}
          className={`px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full mx-2 transform transition-transform duration-300 ease-in-out hover:scale-110 hover:shadow-xl hover:from-yellow-400 hover:to-red-500 disabled:bg-gray-500 disabled:cursor-not-allowed ${flip ? "animate-flip" : ""}`}
        >
          Previous
        </button>

        <span className="text-white font-extrabold text-xl">
          Page {page} of {totalPages}
        </span>

        <button
          onClick={() => handlePageChange(page < totalPages ? page + 1 : page)}
          disabled={page === totalPages}
          className={`px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full mx-2 transform transition-transform duration-300 ease-in-out hover:scale-110 hover:shadow-xl hover:from-yellow-400 hover:to-red-500 disabled:bg-gray-500 disabled:cursor-not-allowed ${flip ? "animate-flip" : ""}`}
        >
          Next
        </button>
      </div>
    </div>
  );
};

export default Designs;
